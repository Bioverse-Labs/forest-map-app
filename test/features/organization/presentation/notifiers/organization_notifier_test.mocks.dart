// Mocks generated by Mockito 5.4.0 from annotations
// in forest_map/test/features/organization/presentation/notifiers/organization_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:forest_map/core/errors/failure.dart' as _i5;
import 'package:forest_map/features/organization/domain/entities/organization.dart'
    as _i6;
import 'package:forest_map/features/organization/domain/usecases/create_organization.dart'
    as _i3;
import 'package:forest_map/features/organization/domain/usecases/delete_organization.dart'
    as _i9;
import 'package:forest_map/features/organization/domain/usecases/get_organization.dart'
    as _i7;
import 'package:forest_map/features/organization/domain/usecases/remove_member.dart'
    as _i11;
import 'package:forest_map/features/organization/domain/usecases/save_organization_locally.dart'
    as _i12;
import 'package:forest_map/features/organization/domain/usecases/update_member.dart'
    as _i10;
import 'package:forest_map/features/organization/domain/usecases/update_organization.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CreateOrganization].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateOrganization extends _i1.Mock
    implements _i3.CreateOrganization {
  MockCreateOrganization() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>> call(
          _i3.CreateOrganizationParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>>.value(
                _FakeEither_0<_i5.Failure, _i6.Organization>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>>);
}

/// A class which mocks [GetOrganization].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOrganization extends _i1.Mock implements _i7.GetOrganization {
  MockGetOrganization() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Organization?>> call(
          _i7.GetOrganizationParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Organization?>>.value(
                _FakeEither_0<_i5.Failure, _i6.Organization?>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Organization?>>);
}

/// A class which mocks [UpdateOrganization].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateOrganization extends _i1.Mock
    implements _i8.UpdateOrganization {
  MockUpdateOrganization() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>> call(
          _i8.UpdateOrganizationParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>>.value(
                _FakeEither_0<_i5.Failure, _i6.Organization>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>>);
}

/// A class which mocks [DeleteOrganization].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteOrganization extends _i1.Mock
    implements _i9.DeleteOrganization {
  MockDeleteOrganization() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> call(
          _i9.DeleteOrganizationParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}

/// A class which mocks [UpdateMember].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateMember extends _i1.Mock implements _i10.UpdateMember {
  MockUpdateMember() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>> call(
          _i10.UpdateMemberParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>>.value(
                _FakeEither_0<_i5.Failure, _i6.Organization>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>>);
}

/// A class which mocks [RemoveMember].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveMember extends _i1.Mock implements _i11.RemoveMember {
  MockRemoveMember() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>> call(
          _i11.RemoveMemberParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>>.value(
                _FakeEither_0<_i5.Failure, _i6.Organization>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Organization>>);
}

/// A class which mocks [SaveOrganizationLocally].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveOrganizationLocally extends _i1.Mock
    implements _i12.SaveOrganizationLocally {
  MockSaveOrganizationLocally() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> call(
          _i12.SaveOrganizationLocallyParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
