// Mocks generated by Mockito 5.4.3 from annotations
// in forest_map/test/features/tracking/data/repositories/location_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:data_connection_checker_nulls/data_connection_checker_nulls.dart'
    as _i8;
import 'package:forest_map/core/platform/network_info.dart' as _i7;
import 'package:forest_map/features/tracking/data/datasources/location_local_data_source.dart'
    as _i5;
import 'package:forest_map/features/tracking/data/datasources/location_remote_data_source.dart'
    as _i3;
import 'package:forest_map/features/tracking/data/models/location_model.dart'
    as _i2;
import 'package:forest_map/features/tracking/domain/entities/location.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocationModel_0 extends _i1.SmartFake implements _i2.LocationModel {
  _FakeLocationModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocationRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationRemoteDataSource extends _i1.Mock
    implements _i3.LocationRemoteDataSource {
  MockLocationRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> saveLocation(
    String? userId,
    _i2.LocationModel? location,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLocation,
          [
            userId,
            location,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.LocationModel>> getLocations(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocations,
          [userId],
        ),
        returnValue:
            _i4.Future<List<_i2.LocationModel>>.value(<_i2.LocationModel>[]),
      ) as _i4.Future<List<_i2.LocationModel>>);
}

/// A class which mocks [LocationLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationLocalDataSource extends _i1.Mock
    implements _i5.LocationLocalDataSource {
  MockLocationLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i4.Stream<_i6.Location>> getPositionStream() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPositionStream,
          [],
        ),
        returnValue: _i4.Future<_i4.Stream<_i6.Location>>.value(
            _i4.Stream<_i6.Location>.empty()),
      ) as _i4.Future<_i4.Stream<_i6.Location>>);

  @override
  _i4.Future<void> saveLocation(
    String? userId,
    _i2.LocationModel? location,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLocation,
          [
            userId,
            location,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.LocationModel>> getLocations(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocations,
          [userId],
        ),
        returnValue:
            _i4.Future<List<_i2.LocationModel>>.value(<_i2.LocationModel>[]),
      ) as _i4.Future<List<_i2.LocationModel>>);

  @override
  _i4.Future<void> syncLocations(
    String? userId,
    List<_i2.LocationModel>? locations,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncLocations,
          [
            userId,
            locations,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.LocationModel> getCurrentLocation() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentLocation,
          [],
        ),
        returnValue: _i4.Future<_i2.LocationModel>.value(_FakeLocationModel_0(
          this,
          Invocation.method(
            #getCurrentLocation,
            [],
          ),
        )),
      ) as _i4.Future<_i2.LocationModel>);
}

/// A class which mocks [NetworkInfoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfoImpl extends _i1.Mock implements _i7.NetworkInfoImpl {
  MockNetworkInfoImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> get isWifi => (super.noSuchMethod(
        Invocation.getter(#isWifi),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Stream<_i8.DataConnectionStatus> get connectionStatusStream =>
      (super.noSuchMethod(
        Invocation.getter(#connectionStatusStream),
        returnValue: _i4.Stream<_i8.DataConnectionStatus>.empty(),
      ) as _i4.Stream<_i8.DataConnectionStatus>);
}
